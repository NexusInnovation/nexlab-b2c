parameters:
  - name: name
    type: string
  - name: displayName
    type: string
  - name: environment
    type: string
  - name: artifactName
    type: string
  - name: condition
    type: string

stages:
  - stage: ${{ parameters.name }}
    dependsOn: BuildPackage
    displayName: ${{ parameters.displayName }}
    condition: and(succeeded(), ${{ parameters.condition }})
    variables:
      - group: B2CClient-Common
      - ${{ if eq(parameters.environment, 'prd') }}:
          - group: B2CClient-Prod
      - ${{ if eq(parameters.environment, 'stg') }}:
        - group: B2CClient-Staging
      - ${{ if eq(parameters.environment, 'dev') }}:
        - group: B2CClient-Dev
      - name: environment
        value: '${{ parameters.environment }}'
      - name: b2cTemplatePath
        value: '$(Pipeline.Workspace)/${{ parameters.artifactName }}/templates'

    jobs:
      - deployment: DeployStorageAccount
        displayName: 'Deploy Storage Account ${{ parameters.environment }}'
        environment: ${{ parameters.environment }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  displayName: 'Create or Update Azure Infrastructure'
                  inputs:
                    azureSubscription: $(ServicePrincipalName)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      az --version
                      $directoryExists = $true
                      $rgExists = az group exists -n "rg-$(ApplicationName)-$(environment)"
                      az deployment sub create --location $(Location) `
                        --template-file "$(Pipeline.Workspace)\${{ parameters.artifactName }}\bicep\main.bicep" `
                        --parameters environment=$(environment) `
                        applicationName=$(ApplicationName) `
                        location=$(Location) `
                        tenantLocation=$(B2CTenantLocation) `
                        tenantCountryCode=$(B2CTenantCountryCode) `
                        resourceGroupExists=$rgExists `
                        b2cTenantExists=$directoryExists

                - task: AzureFileCopy@5
                  inputs:
                    SourcePath: $(b2cTemplatePath)
                    azureSubscription: $(ServicePrincipalName)
                    Destination: 'AzureBlob'
                    storage: '$(applicationName)$(environment)st'
                    ContainerName: 'templates'
                    resourceGroup: $(resourceGroupName)
                    AdditionalArgumentsForBlobCopy: |
                      --overwrite=true `
                      --recursive=true
