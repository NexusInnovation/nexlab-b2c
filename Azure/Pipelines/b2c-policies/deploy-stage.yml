parameters:
  - name: name
    type: string
  - name: displayName
    type: string
  - name: environment
    type: string
  - name: artifactName
    type: string
  - name: condition
    type: string

stages:
  - stage: ${{ parameters.name }}
    dependsOn: BuildPackage
    displayName: ${{ parameters.displayName }}
    condition: and(succeeded(), ${{ parameters.condition }})
    variables:
      - group: B2CClient-Common
      - ${{ if eq(parameters.environment, 'prd') }}:
          - group: B2CClient-Prod
      - ${{ if eq(parameters.environment, 'stg') }}:
        - group: B2CClient-Staging
      - ${{ if eq(parameters.environment, 'dev') }}:
        - group: B2CClient-Dev
      - name: environment
        value: '${{ parameters.environment }}'
      - name: b2cTemplatePath
        value: '$(Pipeline.Workspace)/${{ parameters.artifactName }}/templates'

    jobs:
      - deployment: DeployStorageAccount
        displayName: 'Deploy Storage Account ${{ parameters.environment }}'
        environment: ${{ parameters.environment }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFileCopy@5
                  displayName: 'Send b2c template files to Azure Blob Storage'
                  inputs:
                    SourcePath: $(b2cTemplatePath)
                    azureSubscription: $(ServicePrincipalName)
                    Destination: 'AzureBlob'
                    storage: '$(applicationName)$(environment)st'
                    ContainerName: 'templates'
                    resourceGroup: $(resourceGroupName)
                    AdditionalArgumentsForBlobCopy: |
                      --overwrite=true `
                      --recursive=true
                - task: AzurePowerShell@5
                  displayName: 'Replace Params in Custom Policies'
                  inputs:
                    azureSubscription: $(ServicePrincipalName)
                    pwsh: true
                    azurePowerShellVersion: LatestVersion
                    scriptType: filePath
                    scriptPath: '$(Pipeline.Workspace)/${{parameters.artifactName}}/scripts/replaceParams.ps1'
                    scriptArguments: > 
                      -TenantName $(TenantName)
                      -TenantId $(TenantId)
                      -ProxyIdentityFrameworkId $(ProxyIdentityFrameworkId)
                      -IdentityExperienceFrameworkId $(IdentityExperienceFrameworkid)
                      -BlobStorageName '$(applicationName)$(environment)st'
                      -SendGridVerifyEmailTemplateId $(SendGridVerifyEmailTemplateId)
                      -SendGridFromEmail $(SendGridFromEmail)
                      -TokenIssuerId $(TokenIssuerId)
                      -RestApiUrl $(RestApiUrl)
                - task: AzurePowerShell@5
                  displayName: 'Deploy Polciies'
                  inputs:
                    azureSubscription: $(ServicePrincipalName)
                    pwsh: true
                    azurePowerShellVersion: LatestVersion
                    scriptType: filePath
                    scriptPath: '$(Pipeline.Workspace)/${{parameters.artifactName}}/scripts/deployPolicies.ps1'
                    scriptArguments: > 
                      -ClientId $(DeploymentClientId)
                      -ClientSecret $(DeploymentClientSecret)
                      -TenantId $(TenantId)
